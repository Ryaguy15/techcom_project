{"version":3,"sources":["logo.svg","images/hiking.jpg","NavBar.js","DropDown.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","props","useState","menuClass","setMenuClass","burgerClass","setBurgerClass","className","role","href","aria-label","aria-expanded","data-target","onClick","newCssClass","aria-hidden","id","children","DropDown","class","topName","App","item","style","target","type","width","height","src","frameborder","allow","allowfullscreen","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sGAAAA,EAAOC,QAAU,IAA0B,kC,wCCA3CD,EAAOC,QAAU,IAA0B,oC,sGCI9BC,EAAS,SAACC,GAAW,IAAD,EAEOC,mBAAS,IAFhB,mBAEpBC,EAFoB,KAETC,EAFS,OAGWF,mBAAS,IAHpB,mBAGpBG,EAHoB,KAGPC,EAHO,KAWzB,OACI,yBAAKC,UAAW,SAAUC,KAAM,cAC5B,yBAAKD,UAAW,gBACZ,uBAAGA,UAAW,eAAgBE,KAAM,KAApC,mBAGA,uBAAGD,KAAK,SAASD,UAAW,wBAA0BF,EAAaK,aAAW,OAAOC,gBAAc,QAChGC,cAAY,aAAaC,QAbjB,WACnB,IAAIC,EAA4B,KAAdX,EAAmB,GAAK,YAC1CG,EAAeQ,GACfV,EAAaU,KAWD,0BAAMC,cAAY,SAClB,0BAAMA,cAAY,SAClB,0BAAMA,cAAY,WAI1B,yBAAKR,UAAW,eAAiBJ,EAAWa,GAAI,cAC5C,yBAAKT,UAAU,gBACVN,EAAMgB,aC7BlBC,EAAW,SAACjB,GACrB,OACI,yBAAKkB,MAAM,yCACT,uBAAGA,MAAM,eACNlB,EAAMmB,SAET,yBAAKD,MAAM,6BACRlB,EAAMgB,Y,gBC0GJI,MA3Gf,WACE,OACE,yBAAKd,UAAU,OACb,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAWe,KAAM,CAAC,kBAAmB,iBAAkB,SAAU,UAAWC,MAAO,CAAC,QAAW,OAAQ,UAAa,QAClH,4BAAI,uBAAGhB,UAAW,cAAeE,KAAM,oBAAnC,YACJ,4BAAI,uBAAGF,UAAW,cAAeE,KAAM,mBAAnC,WACJ,4BAAI,kBAAC,EAAD,CAAUW,QAAS,aACrB,uBAAGD,MAAM,cAAcV,KAAM,WAA7B,UAGA,uBAAGU,MAAM,cAAcV,KAAM,WAA7B,cAMN,6BACA,6BAASO,GAAI,kBAAmBT,UAAW,qBACzC,wBAAIA,UAAW,YAAf,YACA,6BACA,mKAIA,iCACK,mCACH,uBAAGiB,OAAQ,SAAUf,KAAM,uFAA3B,uBAGA,mCALF,iCAOA,wBAAIgB,KAAM,KACR,wDACA,+EACA,sDACA,sDACA,8DACA,iFAIJ,6BACA,6BAAST,GAAI,iBAAkBT,UAAW,qBACxC,sCACA,6BACA,+HAIA,wRAGE,0IAGF,uEACA,4BACE,oDACA,0DAEF,qJAIF,6BACA,6BAASS,GAAI,aAAcT,UAAW,qBACpC,kDACA,6BACA,mHACA,wBAAIS,GAAI,UAAR,UACA,2MAIA,qGACA,6DAEA,wBAAIA,GAAI,UAAR,mBACA,mGACA,sHACA,6DACA,wFACA,4BAAQU,MAAM,MAAMC,OAAO,MAC3BC,IAAI,qDACJC,YAAY,IACZC,MAAM,0EACNC,iBAAe,IAEf,qFACA,2EAEE,uBAAGtB,KAAM,+BAAT,kBAIJ,4BAAQF,UAAW,UACjB,yBAAKA,UAAW,4BAA6BgB,MAAO,CAAC,MAAS,UAC5D,qEACA,uBAAGP,GAAI,cAAeP,KAAM,+CAA5B,wBC/FUuB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD8H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.e7e01b85.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/hiking.e5ac0568.jpg\";","import React, {useState} from 'react'\n\n\n\nexport const NavBar = (props) => {\n\n        let [menuClass, setMenuClass] = useState(\"\");\n        let [burgerClass, setBurgerClass] = useState(\"\");\n    \n        let hamburgerClicked = () => {\n            let newCssClass = menuClass !== \"\" ? \"\" : \"is-active\";\n            setBurgerClass(newCssClass);\n            setMenuClass(newCssClass)\n        };\n    \n        return (\n            <nav className={'navbar'} role={'navigation'}>\n                <div className={'navbar-brand'}>\n                    <a className={'navbar-item '} href={\"/\"}>\n                        Natural Fitness\n                    </a>\n                    <a role=\"button\" className={\"navbar-burger burger \" + burgerClass} aria-label=\"menu\" aria-expanded=\"false\"\n                       data-target=\"navbarMenu\" onClick={hamburgerClicked}>\n                        <span aria-hidden=\"true\"></span>\n                        <span aria-hidden=\"true\"></span>\n                        <span aria-hidden=\"true\"></span>\n                    </a>\n                </div>\n    \n                <div className={'navbar-menu ' + menuClass} id={'navbarMenu'}>\n                    <div className=\"navbar-start\">\n                        {props.children}\n                    </div>\n                </div>\n            </nav>\n        );\n}","import React from 'react';\n\nexport const DropDown = (props) => {\n    return (\n        <div class=\"navbar-item has-dropdown is-hoverable\">\n          <a class=\"navbar-link\">\n            {props.topName}\n          </a>\n          <div class=\"navbar-dropdown is-boxed \">\n            {props.children}\n          </div>\n        </div>\n\n    )\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './sass/App.scss';\nimport hiking from './images/hiking.jpg'\nimport {NavBar} from './NavBar';\nimport {DropDown} from './DropDown'\nimport Scrollspy from 'react-scrollspy'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar>\n        <Scrollspy item={['fitness-section', 'nature-section', 'hiking', 'biking']} style={{'display': 'flex', 'marginTop': '5px'}}>\n          <li><a className={'navbar-item'} href={'#fitness-section'}>Fitness</a></li>\n          <li><a className={'navbar-item'} href={'#nature-section'}>Nature</a></li>\n          <li><DropDown topName={'Activites'}>\n            <a class=\"navbar-item\" href={'#hiking'}>\n              Hiking\n            </a>\n            <a class=\"navbar-item\" href={'#biking'}>\n              Biking\n            </a>\n          </DropDown></li>\n        </Scrollspy>\n      </NavBar>\n      <br/>\n      <section id={'fitness-section'} className={'content container'}>\n        <h2 className={'is-large'}>Exercise</h2>\n        <hr/>\n        <p>Exercies is an integral part of living a healthy life. \n          Exercise is often seen as painful and not\n          really needed in a modern lifestly.\n        </p>\n        <p>\n          The<span> </span>  \n          <a target={'_blank'} href={'https://www.mayoclinic.org/healthy-lifestyle/fitness/in-depth/exercise/art-20048389'}>\n           Mayo clinc listed 7\n          </a>\n          <span> </span> \n          reason exercise is beneficial</p>\n        <ol type={'1'}>\n          <li>Exercise controls weight</li>\n          <li>Exercise combats health conditions and diseases</li>\n          <li>Exercise improves mood</li>\n          <li>Exercise boosts energy</li>\n          <li>Exercise promotes better sleep</li>\n          <li>Exercise puts the spark back into your sex life</li>\n        </ol>\n        \n      </section>\n      <br/>\n      <section id={'nature-section'} className={'content container'}>\n        <h2>Nature</h2>\n        <hr/>\n        <p>\n          Along with physical exercise, \n          immersing oneself in nature has asounding effects on mental health\n        </p>\n        <p>\n          Jeremy Coles in the BBC wrote about how nature has a profound effect on health, 30% of people \n          self reported their health as \"excellent\". This was quite asounding to Lucy Roberts Lucy McRobert, nature matters campaigns manager for The Wildlife Trusts.\n          <blockquote>Intuitively we knew that nature was good for us as humans, but the results were beyond brilliant </blockquote>\n        </p>\n\n        <p>Children respond well to nature as well:</p>\n        <ul>\n          <li>Improved Self-Esteem</li>\n          <li>Decrease in ADHD symptons</li>\n        </ul>\n        <p>Nature exposure is not a cure all for any disease, \n          but can still have dramatic effects on physical\n          and mental health.</p>\n      </section>\n      <br/>\n      <section id={'activities'} className={'content container'}>\n        <h2>How to get started</h2>\n        <hr/>\n        <p>Now that you understand the benefits of nature and exercise. How do you get started?</p>\n        <h3 id={'hiking'}>Hiking</h3>\n        <p> \n          When you hear hiking, you might think it means walking in a mountain range for a long time.\n          Hiking doesn't need to be like this. It can be a casual stroll on a forest path.\n        </p>\n        <p>If it snows where you live, you can also invest in some snowshoes too!</p>\n        <strong>How to I get into hiking?</strong>\n\n        <h3 id={'biking'}>Mountain Biking</h3>\n        <p>Mountain biking is a really fun way to exercise and expirence nature</p>\n        <p>Depending on what type of trails you ride, you don't need to spend all that much money.</p>\n        <strong>How to I get into Biking?</strong>\n        <p>Here's an excellent video on how find gear to get started</p>\n        <iframe width=\"560\" height=\"315\" \n        src=\"https://www.youtube-nocookie.com/embed/X6J5WwllX1k\" \n        frameborder=\"0\" \n        allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \n        allowfullscreen></iframe>\n\n        <p>Now that you know what to get to ride, Where do you go</p>\n        <p>\n          One great website for finding local trails is \n          <a href={'https://www.mtbproject.com/'}> MTB Project</a>\n        </p>\n\n      </section>\n      <footer className={'footer'}>\n        <div className={'content has-text-centered'} style={{'color': 'white'}}>\n          <p>A small website made by Ryan Philipps.</p>\n          <a id={'source-code'} href={'https://github.com/Ryaguy15/techcom_project'}>Source Code Here</a>\n        </div>\n      </footer> \n    </div>\n  );\n \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}